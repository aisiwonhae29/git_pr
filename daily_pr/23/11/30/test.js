const ControllerVariableComb = {
    OCPPCommCtrlr: [
        'ActiveNetworkProfile',
        'MessageTimeout',
        'FileTransferProtocols',
        'HeartbeatInterval',
        'NetworkConfigurationPriority',
        'NetworkProfileConnectionAttempts',
        'OfflineThreshold',
        'QueueAllMessages',
        'MessageAttempts',
        'MessageAttemptInterval',
        'UnlockOnEVSideDisconnect',
        'WebSocketPingInterval',
        'ResetRetries',
        'FieldLength',
        'PublicKeyWithSignedMeterValue',
        ],
    DeviceDataCtrlr: [
        'ItemsPerMessage',
        'ItemsPerMessage',
        'BytesPerMessage',
        'BytesPerMessage',
        'ConfigurationValueSize',
        'ReportingValueSize',
        'ItemsPerMessage',
        'BytesPerMessage',
    ],
    ClockCtrlr: [
        'DateTime',
        'NtpSource',
        'NtpServerUri',
        'TimeOffset',
        'NextTimeOffsetTransitionDateTime',
        'TimeOffset',
        'TimeSource',
        'TimeZone',
        'TimeAdjustmentReportingThreshold',
    ],
    CustomizationCtrlr: [
        'CustomImplementationEnabled'
    ],
    SecurityCtrlr: [
        'BasicAuthPassword',
        'Identity',
        'OrganizationName',
        'CertificateEntries',
        'SecurityProfile',
        'AdditionalRootCertificateCheck',
        'MaxCertificateChainSize',
        'CertSigningWaitMinimum',
        'CertSigningRepeatTimes',
    ],
    AuthCtrlr: [
        'Enabled',
        'AdditionalInfoItemsPerMessage',
        'OfflineTxForUnknownIdEnabled',
        'AuthorizeRemoteStart',
        'LocalAuthorizeOffline',
        'LocalPreAuthorize',
        'MasterPassGroupId',
        'DisableRemoteAuthorization',
    ],
    AuthCacheCtrlr: [
        'Enabled',
        'Available',
        'LifeTime',
        'Storage',
        'Policy',
        'DisablePostAuthorize',
    ],
    LocalAuthListCtrlr: [
        'Enabled',
        'Entries',
        'Available',
        'ItemsPerMessage',
        'BytesPerMessage',
        'Storage',
        'DisablePostAuthorize',
    ],
    TxCtrlr: [
        'EVConnectionTimeOut',
        'StopTxOnEVSideDisconnect',
        'TxBeforeAcceptedEnabled',
        'TxStartPoint',
        'TxStopPoint',
        'TxStartStopPoint values',
        'MaxEnergyOnInvalidId',
        'StopTxOnInvalidId',
    ],
    SampledDataCtrlr: [
        'Enabled',
        'Available',
        'SignReadings',
        'TxEndedMeasurands',
        'TxEndedInterval',
        'TxStartedMeasurands',
        'TxUpdatedMeasurands',
        'RegisterValuesWithoutPhases',
    ],
    AlignedDataCtrlr: [
        'TxUpdatedInterval',
        'Enabled',
        'Available',
        'Measurands',
        'Interval',
        'SendDuringIdle',
        'SignReadings',
        'TxEndedMeasurands',
        'TxEndedInterval',
    ],
    ReservationCtrlr: [
        'Enabled',
        'Available',
        'NonEvseSpecific',
    ],
    SmartChargingCtrlr: [
        'Enabled',
        'Available',
        'ACPhaseSwitchingSupported',
        'ProfileStackLevel',
        'RateUnit',
        'PeriodsPerSchedule',
        'ExternalControlSignalsEnabled',
        'NotifyChargingLimitWithSchedules',
        'Phases3to1',
        'Entries',
        'LimitChangeSignificance',
    ],
    TariffCostCtrlr: [
        'Enabled',
        'Available',
        'TariffFallbackMessage',
        'Enabled',
        'Available',
        'TotalCostFallbackMessage',
        'Currency',
    ],
    MonitoringCtrlr: [
        'Enabled',
        'Available',
        'ItemsPerMessage',
        'ItemsPerMessage',
        'BytesPerMessage',
        'BytesPerMessage',
        'OfflineQueuingSeverity',
        'ActiveMonitoringBase',
        'ActiveMonitoringLevel',
    ],
    DisplayMessageCtrlr: [
        'Enabled',
        'Available',
        'DisplayMessages',
        'SupportedFormats',
        'SupportedPriorities',
    ],
    AccessBarrier: [
        'Enabled',
        'Active',
        'Problem',
    ],
    AcDcConverter: [
        'Enabled',
        'Problem',
        'Tripped',
        'Overload',
        'DCVoltage',
        'DCCurrent',
        'Power',
        'Temperature',
        'FanSpeed',
    ],
    AcPhaseSelector: [
        'Enabled',
        'Active',
        'Problem',
        'PhaseRotation',
    ],
    Actuator: [
        'Enabled',
        'Active',
        'Problem',
        'State',
        ],
    AirCoolingSystem: [
        'Enabled',
        'Active',
        'Problem',
        'FanSpeed',
        ],
    AreaVentilation: [
        'Enabled',
        'Active',
        'Problem',
        'FanSpeed',
        ],
    BayOccupancySensor: [
        'Enabled',
        'Active',
        'Percent',
        ],
    BeaconLighting: [
        'Enabled',
        'Active',
        'Problem',
        'Percent',
        'Power',
        'Color',
        ],
    CableBreakawaySensor: [
        'Enabled',
        'Active',
        'Tripped',
        ],
    CaseAccessSensor: [
        'Enabled',
        'Active',
        'Tripped',
        'Problem',
        ],
    ChargingStation: [
        'Enabled',
        'Problem',
        'Identity',
        'Tripped',
        'Overload',
        'SupplyPhases',
        'SupplyPhases(MaxLimit)',
        'PhaseRotation',
        'ACVoltage',
        'ACVoltage(MaxLimit)',
        'ACCurrent',
        'Power',
        'Power(MaxLimit)',
        'VoltageImbalance',
        'CurrentImbalance',
        'VendorName',
        'Model',
        'ECVariant',
        'SerialNumber',
        'OperatingTimes',
        'ChargeProtocol',
        'AvailabilityState',
        'AllowNewSessionsPendingFirmwareUpdate',
        ],
    ChargingStatusIndicator: [
        'Active',
        'Color',
        ],
    ConnectedEV : [
        'Available',
        'VehicleId',
        'ProtocolAgreed',
        'ProtocolSupportedByEV',
        'ACCurrent.minSet',
        'ACCurrent.maxSet',
        'ACVoltage.maxSet',
        'DCCurrent.minSet',
        'DCCurrent.maxSet',
        'DCCurrent.target',
        'DCVoltage.minSet',
        'DCVoltage.maxSet',
        'DCVoltage.target',
        'Power.maxSet',
        'EnergyCapacity',
        'EnergyImport.target',
        'DepartureTime',
        'RemainingTimeBulk',
        'RemainingTimeFull.maxSet',
        'RemainingTimeFull.actual',
        'StateOfChargeBulk',
        'StateOfCharge.maxSet',
        'StateOfCharge.actual',
        'ChargingCompleteBulk',
        'ChargingCompleteFull',
        'ChargingState',
        ],
    Connector: [
        'Enabled',
        'Problem',
        'Tripped',
        'ConnectorType',
        'SupplyPhases',
        'SupplyPhases(MaxLimit)',
        'PhaseRotation',
        'ChargeProtocol',
        'AvailabilityState',
        ],
    ConnectorHolsterRelease: [
        'Enabled',
        'Active',
        'Problem',
        'State',
        ],
    ConnectorHolsterSensor: [
        'Enabled',
        'Active',
        'Problem',
        ],
    ConnectorPlugRetentionLock: [
        'Enabled',
        'Active',
        'Problem',
        'Tripped',
        'Tries',
        'Tries(SetLimit)',
        'Tries(MaxLimit)',
        ],
    ConnectorProtectionRelease: [
        'Enabled',
        'Active',
        'Problem',
        'Tripped',
        ],
    Controller: [
        'Active',
        'Problem',
        'Interval[Heartbeat]',
        'Manufacturer',
        'Model',
        'ECVariant',
        'SerialNumber',
        'VersionNumber',
        'VersionDate',
        'FirmwareVersion',
        'MaxMsgElements',
        'SelftestActive',
        ],
    ControlMetering: [
        'Power',
        'ACCurrent',
        'DCCurrent',
        'DCVoltage',
        ],
    CPPWMController: [
        'Enabled',
        'Active',
        'Problem',
        'DCVoltage',
        'State',
        'Percentage',
        'SelftestActive',
        ],
    DataLink: [
        'Enabled',
        'Active',
        'Fallback',
        'Complete',
        'Problem',
        'IMSI',
        'ICCID',
        'NetworkAddress',
        'SignalStrength',
        ],
    Display: [
        'Enabled',
        'Problem',
        'Color',
        'Count[HeightInChars]',
        'Count[WidthInChars]',
        'DataText[Visible]',
        'State',
        ],
    DistributionPanel: [
        'InstanceName',
        'Fuse',
        'ChargingStation',
        'ChargingStation',
        'DistributionPanel',
        ],
    ElectricalFeed: [
        'Enabled',
        'Active',
        'Problem',
        'PowerType',
        'Power',
        'Energy',
        'DCVoltage',
        'SupplyPhases',
        'PhaseRotation',
        ],
    ELVSupply: [
        'EnergyImportRegister',
        'Power',
        'Fallback',
        'StateOfCharge',
        'Time',
        ],
    EmergencyStopSensor: [
        'Enabled',
        'Active',
        'Tripped',
        ],
    EnvironmentalLighting: [
        'Enabled',
        'Active',
        'Problem',
        'Percent',
        'Power',
        'Color',
        ],
    EVRetentionLock: [
        'Enabled',
        'Active',
        'Complete',
        'Problem',
        ],
    EVSE: [
        'Enabled',
        'Problem',
        'Tripped',
        'Overload',
        'EvseId',
        'SupplyPhases',
        'PhaseRotation',
        'AllowReset',
        'ACVoltage',
        'ACCurrent',
        'DCVoltage',
        'DCCurrent',
        'Power',
        'VoltageImbalance',
        'CurrentImbalance',
        'ChargeProtocol',
        'ChargingTime',
        'PostChargingTime',
        'Count[ChargingProfiles]',
        'Count[ChargingProfiles](MaxLimit)',
        'ISO15118EvseId',
        ],
    ExternalTemperatureSensor: [
        'Active',
        'Problem',
        'Temperature',
        ],
    FiscalMetering: [
        'Problem',
        'EnergyImport',
        'EnergyImportRegister',
        'EnergyExport',
        'EnergyExportRegister',
        'Manufacturer[Meter]',
        'Manufacturer[CT]',
        'Model[Meter]',
        'Model[CT]',
        'ECVariant',
        'SerialNumber[Meter]',
        'SerialNumber[CT]',
        'Certificate',
        'OptionsSet [MeterValueAlignedData]',
        'OptionsSet[TxnStoppedAlignedData]',
        ],
    FloodSensor: [
        'Enabled',
        'Active',
        'Tripped',
        'Height',
        'Percent',
        ],
    GroundIsolationProtection: [
        'Enabled',
        'Active',
        'Complete',
        'Problem',
        'Impedance',
        ],
    Heater: [
        'Enabled',
        'Active',
        'Problem',
        'Tripped',
        'Power',
        'Power(MaxLimit)',
        'Power(MaxSet)',
        'Temperature(MinSet)',
        'Temperature(MaxSet)',
        ],
    HumiditySensor: [
        'Enabled',
        'Problem',
        'Humidity',
        ],
    LightSensor: [
        'Enabled',
        'Problem',
        'Light',
        ],
    LiquidCoolingSystem: [
        'Enabled',
        'Active',
        'Problem',
        'Temperature',
        ],
    LocalAvailabilitySensor: [
        'Enabled',
        'Active',
        'Problem',
        ],
    LocalController: [
        'Enabled',
        'Problem',
        'Identity',
        'Tripped',
        'Manufacturer',
        'Model',
        'ECVariant',
        'SerialNumber',
        'ChargingStation',
        'DistributionPanel',
        ],
    LocalEnergyStorage : [
        'EnergyCapacity',
        'Identity',
        ],
    OverCurrentProtection: [
        'Active',
        'Operated',
        'ACCurrent',
        ],
    OverCurrentProtectionRecloser: [
        'Enabled',
        'Active',
        'Active(Set)',
        'Complete',
        'Problem',
        'Mode',
        'Tries',
        'Tries(SetLimit)',
        'Tries(MaxLimit)',
    ],
    PowerContactor: [
        'Active',
        'Tripped',
        'Problem',
        ],
    RCD: [
        'Tripped',
        'Operated',
        ],
    RCDRecloser: [
        'Enabled',
        'Active',
        'Active(Set)',
        'Complete',
        'Problem',
        'Tries',
        'Tries(SetLimit)',
        'Tries(MaxLimit)',
        ],
    RealTimeClock: [
        'Active',
        'DCVoltage',
        'Fallback',
        'Fallback(MaxLimit)',
        'Problem',
        ],
    ShockSensor: [
        'Enabled',
        'Active',
        'Force',
        ],
    SpacesCountSignage: [
        'Enabled',
        'Active',
        'Count',
        ],
    Switch: [
        'Enabled',
        'Active',
        'State',
        ],
    TemperatureSensor: [
        'Active',
        'Problem',
        'Temperature',
        ],
    TiltSensor: [
        'Enabled',
        'Active',
        'Angle',
        ],
    TokenReader: [
        'Enabled',
        'Enabled(Set)=0',
        'Operated',
        'Problem',
        'Token',
        'TokenType',
        ],
    UpstreamProtectionTrigger: [
        'Enabled',
        'Active(Set)',
        'Tripped',
        'Problem',
        ],
    UIInput: [
        'Enabled',
        'Operated',
        'Active',
        ],
    VehicleIdSensor: [
        'Enabled',
        'Active',
        ],
}

function callVariable(comp){
    let var_arr = ControllerVariableComb[comp];
    return var_arr;
}
console.log(callVariable('VehicleIdSensor'))
